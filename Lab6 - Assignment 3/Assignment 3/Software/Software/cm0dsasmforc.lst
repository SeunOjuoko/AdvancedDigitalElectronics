


ARM Macro Assembler    Page 1 


    1 00000000         ; asm file for use with interrupt timer in C
    2 00000000         ; 2023 version
    3 00000000         
    4 00000000         ; simple stack and heap specification shown here
    5 00000000         ; assumes that microlib is not used
    6 00000000         ; use of microlib can be controlled via target options i
                       n uVision
    7 00000000         
    8 00000000         ; specify block of memory for stack with label Stack_mem
                        for
    9 00000000         ; lowest address
   10 00000000         ; label __initial_sp is the same as label Stack_mem
   11 00000000         ; actual values for these labels will be determined by l
                       inker
   12 00000000 00000400 
                       Stack_Size
                               EQU              0x00000400  ; 1kB of STACK
   13 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=4
   14 00000000         Stack_Mem
                               SPACE            Stack_Size
   15 00000400         __initial_sp
   16 00000400         
   17 00000400         ; specify block of memory for stack with label Heap_mem 
                       for
   18 00000400         ; lowest address
   19 00000400         ; actual value for this label will be determined by link
                       er
   20 00000400 00000400 
                       Heap_Size
                               EQU              0x00000400  ; 1kB of HEAP
   21 00000400                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
4
   22 00000000         Heap_Mem
                               SPACE            Heap_Size
   23 00000400         
   24 00000400         ; __user_initial_stackheap label is consistent with call
                        from C startup
   25 00000400         ; code to legacy function __user_initial_stackheap()
   26 00000400         ; there are alternative methods of setting up the stack 
                       and heap
   27 00000400                 AREA             |.text|, CODE, READONLY, ALIGN=
4
   28 00000000                 EXPORT           __user_initial_stackheap
   29 00000000         ; function __user_initial_stackheap() is called during C
                        start up
   30 00000000         ; and returns addresses of top and bottom of stack and h
                       eap in
   31 00000000         ; registers R0 thru R3
   32 00000000         __user_initial_stackheap
   33 00000000 4802            LDR              R0, =  Heap_Mem
   34 00000002 4903            LDR              R1, =(Stack_Mem + Stack_Size)
   35 00000004 4A03            LDR              R2, = (Heap_Mem +  Heap_Size)
   36 00000006 4B04            LDR              R3, = Stack_Mem
   37 00000008 4770            BX               LR
   38 0000000A         
   39 0000000A         ; exception vector table
   40 0000000A         ; label __Vectors is passed to linker as parameter to op
                       tion --first



ARM Macro Assembler    Page 2 


   41 0000000A         ; in other words linker will place __Vectors at address 
                       0x00000000
   42 0000000A 00 00           ALIGN            4
   43 0000000C                 PRESERVE8
   44 0000000C                 THUMB
   45 0000000C 00000000 
              00000400 
              00000400 
              00000000         AREA             RESET, DATA, READONLY
   46 00000000                 EXPORT           __Vectors
   47 00000000         
   48 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp
   49 00000004 00000000        DCD              Reset_Handler
   50 00000008 00000000        DCD              0
   51 0000000C 00000000        DCD              0
   52 00000010 00000000        DCD              0
   53 00000014 00000000        DCD              0
   54 00000018 00000000        DCD              0
   55 0000001C 00000000        DCD              0
   56 00000020 00000000        DCD              0
   57 00000024 00000000        DCD              0
   58 00000028 00000000        DCD              0
   59 0000002C 00000000        DCD              0
   60 00000030 00000000        DCD              0
   61 00000034 00000000        DCD              0
   62 00000038 00000000        DCD              0
   63 0000003C 00000000        DCD              0
   64 00000040         ; External Interrupts                  
   65 00000040 00000000        DCD              Timer_Handler
   66 00000044 00000000        DCD              0
   67 00000048 00000000        DCD              0
   68 0000004C 00000000        DCD              0
   69 00000050 00000000        DCD              0
   70 00000054 00000000        DCD              0
   71 00000058 00000000        DCD              0
   72 0000005C 00000000        DCD              0
   73 00000060 00000000        DCD              0
   74 00000064 00000000        DCD              0
   75 00000068 00000000        DCD              0
   76 0000006C 00000000        DCD              0
   77 00000070 00000000        DCD              0
   78 00000074 00000000        DCD              0
   79 00000078 00000000        DCD              0
   80 0000007C 00000000        DCD              0
   81 00000080         
   82 00000080                 AREA             |.text|, CODE, READONLY, ALIGN=
4
   83 0000001C         
   84 0000001C         ; C startup code takes the form of function __main()
   85 0000001C         ; label Reset_Handler is passed to linker as parameter t
                       o option --entry
   86 0000001C         
   87 0000001C         Reset_Handler
                               PROC
   88 0000001C                 EXPORT           Reset_Handler
   89 0000001C                 IMPORT           __main
   90 0000001C         



ARM Macro Assembler    Page 3 


   91 0000001C 4800            LDR              R0, =__main
   92 0000001E 4700            BX               R0
   93 00000020                 ENDP
   94 00000020         
   95 00000020                 IMPORT           Timer_Handler
   96 00000020         
   97 00000020                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\cm0dsasmforc.d -o.\cm0dsasmforc.o -I"H:\Digital Electronics\Assi
gnment 3\Assignment 3\Software\Software\RTE" -IQ:\uVision5.eps\ARM\PACK\ARM\CMS
IS\5.0.0-Beta4\CMSIS\Include -IQ:\uVision5.eps\ARM\PACK\ARM\CMSIS\5.0.0-Beta4\D
evice\ARM\ARMCM0\Include --predefine="__UVISION_VERSION SETA 521" --predefine="
_RTE_ SETA 1" --predefine="ARMCM0 SETA 1" --list=.\cm0dsasmforc.lst cm0dsasmfor
c.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 13 in file cm0dsasmforc.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 14 in file cm0dsasmforc.s
   Uses
      At line 34 in file cm0dsasmforc.s
      At line 36 in file cm0dsasmforc.s

__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 15 in file cm0dsasmforc.s
   Uses
      At line 48 in file cm0dsasmforc.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 21 in file cm0dsasmforc.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 22 in file cm0dsasmforc.s
   Uses
      At line 33 in file cm0dsasmforc.s
      At line 35 in file cm0dsasmforc.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 27 in file cm0dsasmforc.s
   Uses
      None
Comment: .text unused
Reset_Handler 0000001C

Symbol: Reset_Handler
   Definitions
      At line 87 in file cm0dsasmforc.s
   Uses
      At line 49 in file cm0dsasmforc.s
      At line 88 in file cm0dsasmforc.s

__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 32 in file cm0dsasmforc.s
   Uses
      At line 28 in file cm0dsasmforc.s
Comment: __user_initial_stackheap used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 45 in file cm0dsasmforc.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 48 in file cm0dsasmforc.s
   Uses
      At line 46 in file cm0dsasmforc.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000400

Symbol: Heap_Size
   Definitions
      At line 20 in file cm0dsasmforc.s
   Uses
      At line 22 in file cm0dsasmforc.s
      At line 35 in file cm0dsasmforc.s

Stack_Size 00000400

Symbol: Stack_Size
   Definitions
      At line 12 in file cm0dsasmforc.s
   Uses
      At line 14 in file cm0dsasmforc.s
      At line 34 in file cm0dsasmforc.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Timer_Handler 00000000

Symbol: Timer_Handler
   Definitions
      At line 95 in file cm0dsasmforc.s
   Uses
      At line 65 in file cm0dsasmforc.s
Comment: Timer_Handler used once
__main 00000000

Symbol: __main
   Definitions
      At line 89 in file cm0dsasmforc.s
   Uses
      At line 91 in file cm0dsasmforc.s
Comment: __main used once
2 symbols
351 symbols in table
