
module AHBPmod(
  input wire HCLK,
  input wire HRESETn,
  input wire [31:0] HADDR,
  input wire [1:0] HTRANS,
  input wire [31:0] HWDATA,
  input wire HWRITE,
  input wire HSEL,
  input wire HREADY,

 
  
	
	//Output
  output wire HREADYOUT,
  output wire [31:0] HRDATA,
  output wire [3:0] DA2

  
  
  );
  
  
  reg [31:0] last_HADDR;
  reg [1:0] last_HTRANS;
  reg last_HWRITE;
  reg last_HSEL;
  
 
  assign HREADYOUT = 1'b1;
  
// Set Registers from address phase  
  always @(posedge HCLK)
  begin
    if(HREADY)
    begin
      last_HADDR <= HADDR;
      last_HTRANS <= HTRANS;
      last_HWRITE <= HWRITE;
      last_HSEL <= HSEL;
    end
  end

  always @(posedge HCLK) begin
	//DA2 logic
//1khz SINE WAVE
//aT LEAST DOUBLE THE NUMBER OF SAMPLES
//1KHZ AT LEAST 2000
//gENERATE BY LOOK UP TABLE
//bIG FAT ARRAY (in C) first element in list is sine at time = 0 (0)
//2nd element in array is sine at itmeslice 1
//3rd Sine of timeslice = 2
//Work out timeslice
//Timeslice look at clock fequency
//Do some maths for sione wave frequency
//For loop through samples
//Time for loop through sample 


 
  end
         
  assign HRDATA[15:0] = gpio_datain;  
  assign GPIOOUT = gpio_dataout;

endmodule
